name: Upload CLI
on:
  push:
    branches:
      - main
    paths:
      - "cli/**"
      - ".github/workflows/cli.yml"
      - "scripts/install/cli.sh"
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # checks out a copy of the repo
      - uses: actions/checkout@main
      - name: Setup Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          scope: "@rescribe"
      # node npm - cache
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: install dependencies
        run: |
          cd scripts/install
          ./cli.sh
          cd -
      - name: copy license
        id: license
        run: |
          cp LICENSE cli
      - name: build
        id: build
        run: |
          cd cli
          npm run build
          cp -R lib dist
          cd -
      - name: publish to npm
        id: publish-npm
        run: |
          cd cli
          npm publish --access public
          cd -
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v1
        with:
          registry-url: "https://npm.pkg.github.com"
          node-version: 14.x
          scope: "@rescribe"
      - name: publish to github packages
        id: publish-github-packages
        run: |
          cd cli
          npm publish
          cd -
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: package
        id: package
        run: |
          cd cli
          ./package.sh
          cd -
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: rescribe-cli
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          SOURCE_DIR: cli/dist
      - name: invalidate cloudfront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_ID_CLI }}
          PATHS: "/*"
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: get commit message
        id: commit-message
        run: |
          echo ::set-env name=commitmsg::$(git log --format=%B -n 1 ${{ github.event.after }})
      - name: publish to aur
        env:
          PUBLIC_KEY: ${{ secrets.AUR_CLI_PUBLIC_KEY }}
          PRIVATE_KEY: ${{ secrets.AUR_CLI_PRIVATE_KEY }}
        run: |
          cd cli/pub/aur
          ./publish.sh $commitmsg
          cd -
      - name: finish
        run: echo "finished!"
