name: Run NLP Dataprocess Library
on:
  push:
    branches:
      - main
    paths:
      - "nlp/dataprocess/library/**"
      - ".github/workflows/nlp-dataprocess-library.yml"
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # checks out a copy of the repo
      - uses: actions/checkout@main
        with:
          lfs: true
      - name: Checkout lfs objects
        run: git lfs checkout
      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          miniconda-version: latest
          python-version: 3.8
      # python pip - cache
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: install dependencies
        run: |
          cd nlp/dataprocess/library
          conda env create --file ./environment.yml
          cd -
      - name: Run precommit
        id: precommit
        run: |
          cd nlp/dataprocess/library
          ./precommit.sh
          cd -
      - name: Generate dist
        id: dist
        run: |
          cd nlp
          ./build.sh dataprocess/library
          cd -
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Docker
        id: docker-build
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          password: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          registry: ${{ steps.login-ecr.outputs.registry }}
          image_name: rescribe-nlp-dataprocess-library
          build_extra_args: --build-arg=CACHEBUST=$(date)
          # change image tag to ${{ github.sha }} if you want
          image_tag: latest
          context: nlp/dataprocess/library
      - name: Run dataprocess job
        id: run-job
        env:
          ROLE: ${{ secrets.AWS_SAGEMAKER_ROLE }}
          IMAGE_NAME: ${{ steps.docker-build.outputs.FULL_IMAGE_NAME }}
        run: |
          cd aws/sagemaker/deploy
          if [ -z "$CONDA_DEFAULT_ENV" ]; then
            source $(conda info --base)/etc/profile.d/conda.sh
          fi
          conda env create --file ./environment.yml
          conda activate rescribe-nlp-sagemaker
          python3 src/main.py
          conda deactivate
          cd -

      - name: finish
        run: echo "finished!"
