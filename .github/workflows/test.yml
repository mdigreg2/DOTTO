name: Test Code
on: pull_request
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # checks out a copy of the repo
      - uses: actions/checkout@main
        with:
          lfs: true
      - name: Checkout lfs objects
        run: git lfs checkout
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          architecture: x64
      - name: Setup Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Setup Conda
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          miniconda-version: latest
          python-version: 3.8
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x

      # cache
      # node
      # yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # npm
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # java
      # gradle
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # python
      # pip
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # go modules - cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install go helpers
        id: go-helpers
        run: |
          cd scripts/install
          ./go_helpers.sh
          cd -

      - name: Install dependencies
        id: install
        run: |
          cd scripts/install
          ./tests.sh
          cd -
      - name: run tests and coverage
        id: testing
        run: |
          cd scripts
          ./test.sh
          cd -
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          name: rescribe-coverage # optional
          fail_ci_if_error: false # optional (default = false)
      - name: finish
        run: echo "finished!"
