name: Docs Origin Request
on:
  push:
    branches:
      - master
    paths:
      - "aws/cloudfront-docs/origin-request/**"
      - ".github/update-cloudfront-lambda/**"
      - ".github/workflows/docs-origin-request.yml"
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # checks out a copy of the repo
      - uses: actions/checkout@master
      - name: Setup Node.js 13
        uses: actions/setup-node@v1
        with:
          node-version: 13.x
      # node yarn - cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: build
        run: |
          cd aws/cloudfront-docs/origin-request
          yarn install
          yarn run predeploy
          mv dist.zip ../../../.github/update-cloudfront-lambda
          cd -
      - name: upload
        run: |
          cd .github/update-cloudfront-lambda
          yarn install
          yarn run build
          yarn start
          cd -
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_CLOUDFRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID_DOCS }}
          AWS_REGION: us-east-1
          SOURCE: dist.zip
          LAMBDA_FUNCTION: rescribe-docs-cloudfront-origin-request
      - name: finish
        run: echo "finished!"
